// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: evochi/v1/evochi.proto

package evochiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_EVENT_TYPE_UNSPECIFIED EventType = 0
	EventType_EVENT_TYPE_HELLO       EventType = 1
	EventType_EVENT_TYPE_EVALUATE    EventType = 3
	EventType_EVENT_TYPE_OPTIMIZE    EventType = 4
	EventType_EVENT_TYPE_INITIALIZE  EventType = 5
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EVENT_TYPE_UNSPECIFIED",
		1: "EVENT_TYPE_HELLO",
		3: "EVENT_TYPE_EVALUATE",
		4: "EVENT_TYPE_OPTIMIZE",
		5: "EVENT_TYPE_INITIALIZE",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED": 0,
		"EVENT_TYPE_HELLO":       1,
		"EVENT_TYPE_EVALUATE":    3,
		"EVENT_TYPE_OPTIMIZE":    4,
		"EVENT_TYPE_INITIALIZE":  5,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_evochi_v1_evochi_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_evochi_v1_evochi_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_evochi_v1_evochi_proto_rawDescGZIP(), []int{0}
}

type Slice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the start index (inclusive)
	Start int32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	// the end index (exclusive)
	End int32 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Slice) Reset() {
	*x = Slice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evochi_v1_evochi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Slice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Slice) ProtoMessage() {}

func (x *Slice) ProtoReflect() protoreflect.Message {
	mi := &file_evochi_v1_evochi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Slice.ProtoReflect.Descriptor instead.
func (*Slice) Descriptor() ([]byte, []int) {
	return file_evochi_v1_evochi_proto_rawDescGZIP(), []int{0}
}

func (x *Slice) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Slice) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

// the server welcomes and initialises the worker
type HelloEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id assigned to the worker
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the token assigned to the worker. now, the worker have to send this token
	// as `Authorization: Bearer <token>` to the server to authenticate itself.
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	// total population size
	PopulationSize int32 `protobuf:"varint,3,opt,name=population_size,json=populationSize,proto3" json:"population_size,omitempty"`
	// the initial state of the worker, where the encoding value is up to the
	// workers. if nil, the worker is the first one to join the work force.
	State []byte `protobuf:"bytes,4,opt,name=state,proto3,oneof" json:"state,omitempty"`
}

func (x *HelloEvent) Reset() {
	*x = HelloEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evochi_v1_evochi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloEvent) ProtoMessage() {}

func (x *HelloEvent) ProtoReflect() protoreflect.Message {
	mi := &file_evochi_v1_evochi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloEvent.ProtoReflect.Descriptor instead.
func (*HelloEvent) Descriptor() ([]byte, []int) {
	return file_evochi_v1_evochi_proto_rawDescGZIP(), []int{1}
}

func (x *HelloEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HelloEvent) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *HelloEvent) GetPopulationSize() int32 {
	if x != nil {
		return x.PopulationSize
	}
	return 0
}

func (x *HelloEvent) GetState() []byte {
	if x != nil {
		return x.State
	}
	return nil
}

// the server requests the worker to evaluate a slice
type EvaluateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the evaluation
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// the slices to be evaluated
	Slices []*Slice `protobuf:"bytes,2,rep,name=slices,proto3" json:"slices,omitempty"`
}

func (x *EvaluateEvent) Reset() {
	*x = EvaluateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evochi_v1_evochi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateEvent) ProtoMessage() {}

func (x *EvaluateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_evochi_v1_evochi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateEvent.ProtoReflect.Descriptor instead.
func (*EvaluateEvent) Descriptor() ([]byte, []int) {
	return file_evochi_v1_evochi_proto_rawDescGZIP(), []int{2}
}

func (x *EvaluateEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *EvaluateEvent) GetSlices() []*Slice {
	if x != nil {
		return x.Slices
	}
	return nil
}

// the server requests the worker to optimize its parameters
type OptimizeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the optimization
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// the current epoch
	Epoch int32 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// whether to send the optimized state to the server after the optimization
	// step
	ShareState bool `protobuf:"varint,3,opt,name=share_state,json=shareState,proto3" json:"share_state,omitempty"`
	// the accumulated rewards in the current epoch, where the encoding value
	// is up to the workers
	Rewards [][]byte `protobuf:"bytes,4,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *OptimizeEvent) Reset() {
	*x = OptimizeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evochi_v1_evochi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptimizeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimizeEvent) ProtoMessage() {}

func (x *OptimizeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_evochi_v1_evochi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimizeEvent.ProtoReflect.Descriptor instead.
func (*OptimizeEvent) Descriptor() ([]byte, []int) {
	return file_evochi_v1_evochi_proto_rawDescGZIP(), []int{3}
}

func (x *OptimizeEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *OptimizeEvent) GetEpoch() int32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *OptimizeEvent) GetShareState() bool {
	if x != nil {
		return x.ShareState
	}
	return false
}

func (x *OptimizeEvent) GetRewards() [][]byte {
	if x != nil {
		return x.Rewards
	}
	return nil
}

// the server requests the worker to create the initial state and send it to the
// server.
type InitializeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the initialization
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *InitializeEvent) Reset() {
	*x = InitializeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evochi_v1_evochi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeEvent) ProtoMessage() {}

func (x *InitializeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_evochi_v1_evochi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeEvent.ProtoReflect.Descriptor instead.
func (*InitializeEvent) Descriptor() ([]byte, []int) {
	return file_evochi_v1_evochi_proto_rawDescGZIP(), []int{4}
}

func (x *InitializeEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

// the client asks the server to join the work force
type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// number of cores that the worker contributes to the evaluation
	Cores int32 `protobuf:"varint,1,opt,name=cores,proto3" json:"cores,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evochi_v1_evochi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evochi_v1_evochi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_evochi_v1_evochi_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeRequest) GetCores() int32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

type SubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the type of event
	Type EventType `protobuf:"varint,1,opt,name=type,proto3,enum=evochi.v1.EventType" json:"type,omitempty"`
	// the event data
	//
	// Types that are assignable to Event:
	//
	//	*SubscribeResponse_Hello
	//	*SubscribeResponse_Evaluate
	//	*SubscribeResponse_Optimize
	//	*SubscribeResponse_Initialize
	Event isSubscribeResponse_Event `protobuf_oneof:"event"`
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evochi_v1_evochi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evochi_v1_evochi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_evochi_v1_evochi_proto_rawDescGZIP(), []int{6}
}

func (x *SubscribeResponse) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (m *SubscribeResponse) GetEvent() isSubscribeResponse_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *SubscribeResponse) GetHello() *HelloEvent {
	if x, ok := x.GetEvent().(*SubscribeResponse_Hello); ok {
		return x.Hello
	}
	return nil
}

func (x *SubscribeResponse) GetEvaluate() *EvaluateEvent {
	if x, ok := x.GetEvent().(*SubscribeResponse_Evaluate); ok {
		return x.Evaluate
	}
	return nil
}

func (x *SubscribeResponse) GetOptimize() *OptimizeEvent {
	if x, ok := x.GetEvent().(*SubscribeResponse_Optimize); ok {
		return x.Optimize
	}
	return nil
}

func (x *SubscribeResponse) GetInitialize() *InitializeEvent {
	if x, ok := x.GetEvent().(*SubscribeResponse_Initialize); ok {
		return x.Initialize
	}
	return nil
}

type isSubscribeResponse_Event interface {
	isSubscribeResponse_Event()
}

type SubscribeResponse_Hello struct {
	Hello *HelloEvent `protobuf:"bytes,2,opt,name=hello,proto3,oneof"`
}

type SubscribeResponse_Evaluate struct {
	Evaluate *EvaluateEvent `protobuf:"bytes,3,opt,name=evaluate,proto3,oneof"`
}

type SubscribeResponse_Optimize struct {
	Optimize *OptimizeEvent `protobuf:"bytes,4,opt,name=optimize,proto3,oneof"`
}

type SubscribeResponse_Initialize struct {
	Initialize *InitializeEvent `protobuf:"bytes,5,opt,name=initialize,proto3,oneof"`
}

func (*SubscribeResponse_Hello) isSubscribeResponse_Event() {}

func (*SubscribeResponse_Evaluate) isSubscribeResponse_Event() {}

func (*SubscribeResponse_Optimize) isSubscribeResponse_Event() {}

func (*SubscribeResponse_Initialize) isSubscribeResponse_Event() {}

// the client sends the server a heartbeat to keep the connection alive
type HeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the sequence id of the heartbeat
	SeqId int32 `protobuf:"varint,1,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	// the time when the heartbeat was sent
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evochi_v1_evochi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evochi_v1_evochi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_evochi_v1_evochi_proto_rawDescGZIP(), []int{7}
}

func (x *HeartbeatRequest) GetSeqId() int32 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *HeartbeatRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// the server acknowledges that the heartbeat was received
type HeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// whether the heartbeat was successful
	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evochi_v1_evochi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evochi_v1_evochi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_evochi_v1_evochi_proto_rawDescGZIP(), []int{8}
}

func (x *HeartbeatResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

// the client tells the server that the worker has finished the evaluation
type FinishEvaluationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the evaluation
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// the rewards for each evaluated slice, where the encoding value is up to
	// the workers
	Rewards [][]byte `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *FinishEvaluationRequest) Reset() {
	*x = FinishEvaluationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evochi_v1_evochi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishEvaluationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishEvaluationRequest) ProtoMessage() {}

func (x *FinishEvaluationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evochi_v1_evochi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishEvaluationRequest.ProtoReflect.Descriptor instead.
func (*FinishEvaluationRequest) Descriptor() ([]byte, []int) {
	return file_evochi_v1_evochi_proto_rawDescGZIP(), []int{9}
}

func (x *FinishEvaluationRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *FinishEvaluationRequest) GetRewards() [][]byte {
	if x != nil {
		return x.Rewards
	}
	return nil
}

// the server acknowledges that the evaluation has finished
type FinishEvaluationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// whether the evaluation was successfully finished
	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *FinishEvaluationResponse) Reset() {
	*x = FinishEvaluationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evochi_v1_evochi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishEvaluationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishEvaluationResponse) ProtoMessage() {}

func (x *FinishEvaluationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evochi_v1_evochi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishEvaluationResponse.ProtoReflect.Descriptor instead.
func (*FinishEvaluationResponse) Descriptor() ([]byte, []int) {
	return file_evochi_v1_evochi_proto_rawDescGZIP(), []int{10}
}

func (x *FinishEvaluationResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

// the client tells the server that the worker has finished the optimization
type FinishOptimizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the evaluation
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// the optimized state of the worker, where the encoding value is up to the
	// workers
	//
	// only workers with `OptimizeEvent.share_state = true` must send their
	// optimized state to the server
	State []byte `protobuf:"bytes,2,opt,name=state,proto3,oneof" json:"state,omitempty"`
}

func (x *FinishOptimizationRequest) Reset() {
	*x = FinishOptimizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evochi_v1_evochi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishOptimizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishOptimizationRequest) ProtoMessage() {}

func (x *FinishOptimizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evochi_v1_evochi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishOptimizationRequest.ProtoReflect.Descriptor instead.
func (*FinishOptimizationRequest) Descriptor() ([]byte, []int) {
	return file_evochi_v1_evochi_proto_rawDescGZIP(), []int{11}
}

func (x *FinishOptimizationRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *FinishOptimizationRequest) GetState() []byte {
	if x != nil {
		return x.State
	}
	return nil
}

// the server acknowledges that the optimization has finished
type FinishOptimizationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// whether the optimization was successfully finished
	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *FinishOptimizationResponse) Reset() {
	*x = FinishOptimizationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evochi_v1_evochi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishOptimizationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishOptimizationResponse) ProtoMessage() {}

func (x *FinishOptimizationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evochi_v1_evochi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishOptimizationResponse.ProtoReflect.Descriptor instead.
func (*FinishOptimizationResponse) Descriptor() ([]byte, []int) {
	return file_evochi_v1_evochi_proto_rawDescGZIP(), []int{12}
}

func (x *FinishOptimizationResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

// the client tells the server that the worker has finished its state
// initialization. this request is sent by the first worker who initiates the
// first epoch.
type FinishInitializationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the initialization
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// the initial state of the worker, where the encoding value is up to the
	// workers
	State []byte `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *FinishInitializationRequest) Reset() {
	*x = FinishInitializationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evochi_v1_evochi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishInitializationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishInitializationRequest) ProtoMessage() {}

func (x *FinishInitializationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evochi_v1_evochi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishInitializationRequest.ProtoReflect.Descriptor instead.
func (*FinishInitializationRequest) Descriptor() ([]byte, []int) {
	return file_evochi_v1_evochi_proto_rawDescGZIP(), []int{13}
}

func (x *FinishInitializationRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *FinishInitializationRequest) GetState() []byte {
	if x != nil {
		return x.State
	}
	return nil
}

// the server acknowledges that the initialization has finished
type FinishInitializationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// whether the initialization was successfully finished
	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *FinishInitializationResponse) Reset() {
	*x = FinishInitializationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evochi_v1_evochi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishInitializationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishInitializationResponse) ProtoMessage() {}

func (x *FinishInitializationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evochi_v1_evochi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishInitializationResponse.ProtoReflect.Descriptor instead.
func (*FinishInitializationResponse) Descriptor() ([]byte, []int) {
	return file_evochi_v1_evochi_proto_rawDescGZIP(), []int{14}
}

func (x *FinishInitializationResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_evochi_v1_evochi_proto protoreflect.FileDescriptor

var file_evochi_v1_evochi_proto_rawDesc = []byte{
	0x0a, 0x16, 0x65, 0x76, 0x6f, 0x63, 0x68, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x6f, 0x63,
	0x68, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x65, 0x76, 0x6f, 0x63, 0x68, 0x69,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x05, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x0a, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6f,
	0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x52, 0x0a, 0x0d, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x6f, 0x63, 0x68, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6c, 0x69, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x22, 0x79, 0x0a, 0x0d,
	0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x2a, 0x0a, 0x0f, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0xa3, 0x02,
	0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x6f, 0x63, 0x68, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a,
	0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65,
	0x76, 0x6f, 0x63, 0x68, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x36, 0x0a, 0x08,
	0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x65, 0x76, 0x6f, 0x63, 0x68, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x65, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x76, 0x6f, 0x63, 0x68, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x12, 0x3c, 0x0a, 0x0a,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x65, 0x76, 0x6f, 0x63, 0x68, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x22, 0x63, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x38,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x23, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x4c, 0x0a,
	0x17, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x2a, 0x0a, 0x18, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x59, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x2c, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x70, 0x74, 0x69,
	0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b,
	0x22, 0x4c, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2e,
	0x0a, 0x1c, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x2a, 0x8a,
	0x01, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x45, 0x4c, 0x4c, 0x4f, 0x10, 0x01, 0x12, 0x17,
	0x0a, 0x13, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x56, 0x41,
	0x4c, 0x55, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4d, 0x49, 0x5a, 0x45, 0x10, 0x04,
	0x12, 0x19, 0x0a, 0x15, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49,
	0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x10, 0x05, 0x32, 0xd4, 0x03, 0x0a, 0x0d,
	0x45, 0x76, 0x6f, 0x63, 0x68, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a,
	0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1b, 0x2e, 0x65, 0x76, 0x6f,
	0x63, 0x68, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x65, 0x76, 0x6f, 0x63, 0x68, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x48, 0x0a, 0x09, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1b, 0x2e, 0x65, 0x76, 0x6f, 0x63, 0x68, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x65, 0x76, 0x6f, 0x63, 0x68, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x65, 0x76, 0x6f, 0x63, 0x68, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x76,
	0x6f, 0x63, 0x68, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x63, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x70, 0x74, 0x69,
	0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x65, 0x76, 0x6f, 0x63, 0x68,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6d,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x65, 0x76, 0x6f, 0x63, 0x68, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x26, 0x2e, 0x65, 0x76, 0x6f, 0x63, 0x68, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x65, 0x76, 0x6f, 0x63, 0x68, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0xa3, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x6f, 0x63, 0x68,
	0x69, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x45, 0x76, 0x6f, 0x63, 0x68, 0x69, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6e, 0x65, 0x75, 0x72, 0x6f, 0x2d, 0x73, 0x6f, 0x75, 0x70, 0x2f, 0x65, 0x76, 0x6f, 0x63, 0x68,
	0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x65, 0x76, 0x6f, 0x63, 0x68, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x76, 0x6f,
	0x63, 0x68, 0x69, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x45, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x45, 0x76,
	0x6f, 0x63, 0x68, 0x69, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x09, 0x45, 0x76, 0x6f, 0x63, 0x68, 0x69,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x15, 0x45, 0x76, 0x6f, 0x63, 0x68, 0x69, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x45, 0x76,
	0x6f, 0x63, 0x68, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_evochi_v1_evochi_proto_rawDescOnce sync.Once
	file_evochi_v1_evochi_proto_rawDescData = file_evochi_v1_evochi_proto_rawDesc
)

func file_evochi_v1_evochi_proto_rawDescGZIP() []byte {
	file_evochi_v1_evochi_proto_rawDescOnce.Do(func() {
		file_evochi_v1_evochi_proto_rawDescData = protoimpl.X.CompressGZIP(file_evochi_v1_evochi_proto_rawDescData)
	})
	return file_evochi_v1_evochi_proto_rawDescData
}

var file_evochi_v1_evochi_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_evochi_v1_evochi_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_evochi_v1_evochi_proto_goTypes = []interface{}{
	(EventType)(0),                       // 0: evochi.v1.EventType
	(*Slice)(nil),                        // 1: evochi.v1.Slice
	(*HelloEvent)(nil),                   // 2: evochi.v1.HelloEvent
	(*EvaluateEvent)(nil),                // 3: evochi.v1.EvaluateEvent
	(*OptimizeEvent)(nil),                // 4: evochi.v1.OptimizeEvent
	(*InitializeEvent)(nil),              // 5: evochi.v1.InitializeEvent
	(*SubscribeRequest)(nil),             // 6: evochi.v1.SubscribeRequest
	(*SubscribeResponse)(nil),            // 7: evochi.v1.SubscribeResponse
	(*HeartbeatRequest)(nil),             // 8: evochi.v1.HeartbeatRequest
	(*HeartbeatResponse)(nil),            // 9: evochi.v1.HeartbeatResponse
	(*FinishEvaluationRequest)(nil),      // 10: evochi.v1.FinishEvaluationRequest
	(*FinishEvaluationResponse)(nil),     // 11: evochi.v1.FinishEvaluationResponse
	(*FinishOptimizationRequest)(nil),    // 12: evochi.v1.FinishOptimizationRequest
	(*FinishOptimizationResponse)(nil),   // 13: evochi.v1.FinishOptimizationResponse
	(*FinishInitializationRequest)(nil),  // 14: evochi.v1.FinishInitializationRequest
	(*FinishInitializationResponse)(nil), // 15: evochi.v1.FinishInitializationResponse
	(*timestamppb.Timestamp)(nil),        // 16: google.protobuf.Timestamp
}
var file_evochi_v1_evochi_proto_depIdxs = []int32{
	1,  // 0: evochi.v1.EvaluateEvent.slices:type_name -> evochi.v1.Slice
	0,  // 1: evochi.v1.SubscribeResponse.type:type_name -> evochi.v1.EventType
	2,  // 2: evochi.v1.SubscribeResponse.hello:type_name -> evochi.v1.HelloEvent
	3,  // 3: evochi.v1.SubscribeResponse.evaluate:type_name -> evochi.v1.EvaluateEvent
	4,  // 4: evochi.v1.SubscribeResponse.optimize:type_name -> evochi.v1.OptimizeEvent
	5,  // 5: evochi.v1.SubscribeResponse.initialize:type_name -> evochi.v1.InitializeEvent
	16, // 6: evochi.v1.HeartbeatRequest.timestamp:type_name -> google.protobuf.Timestamp
	6,  // 7: evochi.v1.EvochiService.Subscribe:input_type -> evochi.v1.SubscribeRequest
	8,  // 8: evochi.v1.EvochiService.Heartbeat:input_type -> evochi.v1.HeartbeatRequest
	10, // 9: evochi.v1.EvochiService.FinishEvaluation:input_type -> evochi.v1.FinishEvaluationRequest
	12, // 10: evochi.v1.EvochiService.FinishOptimization:input_type -> evochi.v1.FinishOptimizationRequest
	14, // 11: evochi.v1.EvochiService.FinishInitialization:input_type -> evochi.v1.FinishInitializationRequest
	7,  // 12: evochi.v1.EvochiService.Subscribe:output_type -> evochi.v1.SubscribeResponse
	9,  // 13: evochi.v1.EvochiService.Heartbeat:output_type -> evochi.v1.HeartbeatResponse
	11, // 14: evochi.v1.EvochiService.FinishEvaluation:output_type -> evochi.v1.FinishEvaluationResponse
	13, // 15: evochi.v1.EvochiService.FinishOptimization:output_type -> evochi.v1.FinishOptimizationResponse
	15, // 16: evochi.v1.EvochiService.FinishInitialization:output_type -> evochi.v1.FinishInitializationResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_evochi_v1_evochi_proto_init() }
func file_evochi_v1_evochi_proto_init() {
	if File_evochi_v1_evochi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_evochi_v1_evochi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Slice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evochi_v1_evochi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evochi_v1_evochi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evochi_v1_evochi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptimizeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evochi_v1_evochi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evochi_v1_evochi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evochi_v1_evochi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evochi_v1_evochi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evochi_v1_evochi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evochi_v1_evochi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishEvaluationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evochi_v1_evochi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishEvaluationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evochi_v1_evochi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishOptimizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evochi_v1_evochi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishOptimizationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evochi_v1_evochi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishInitializationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evochi_v1_evochi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishInitializationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_evochi_v1_evochi_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_evochi_v1_evochi_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*SubscribeResponse_Hello)(nil),
		(*SubscribeResponse_Evaluate)(nil),
		(*SubscribeResponse_Optimize)(nil),
		(*SubscribeResponse_Initialize)(nil),
	}
	file_evochi_v1_evochi_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_evochi_v1_evochi_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_evochi_v1_evochi_proto_goTypes,
		DependencyIndexes: file_evochi_v1_evochi_proto_depIdxs,
		EnumInfos:         file_evochi_v1_evochi_proto_enumTypes,
		MessageInfos:      file_evochi_v1_evochi_proto_msgTypes,
	}.Build()
	File_evochi_v1_evochi_proto = out.File
	file_evochi_v1_evochi_proto_rawDesc = nil
	file_evochi_v1_evochi_proto_goTypes = nil
	file_evochi_v1_evochi_proto_depIdxs = nil
}
